<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							http://www.springframework.org/schema/jdbc
							http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />

	<!-- Weaves in transactional advice around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- The search manager service that can load searchs from the database -->
	<bean id="searchManager" class="com.eniro.test.hibernate.HibernateSearchManager">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<!-- A Hibernate SessionFactory for mapping from object to relation tables -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.eniro.test.model.Search</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<!-- Creates an in-memory "rewards" database populated with test data for 
		fast testing -->
	<jdbc:embedded-database id="dataSource">
		<!-- <jdbc:script location="classpath:accounts/testdb/schema.sql"/> <jdbc:script 
			location="classpath:accounts/testdb/test-data.sql"/> -->
	</jdbc:embedded-database>


	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>
